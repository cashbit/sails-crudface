<h3>Attachments</h3>
<div class="well">
	<div class="row">
		<div class="col-md-6">
			<h4>Drag &amp; drop your files here or click to search</h4>
			<form action="/fileuploads/send" class="dropzone" id="myAwesomeDropzone">
		      <input type="hidden" name="recordid" value="<%= record.id %>" />
		      <input type="hidden" name="classname"	value="<%= attachmentClassName %>" />
		      <% if (attachmentIsPublic) {%><input type="hidden" name="public"	value="public" /><% } %>
		      <input type="hidden" name="_csrf" value="<%= _csrf %>" />
		  	</form>
		</div>
		<div class="col-md-6">
			<h4>Attached files</h4>
			<ul class="attachedfiles list-unstyled">
				<!--
						Example function for the model, to call in the controller useful to populate "attachedFiles"

						getAttachedFiles: function(){
							var Q = require('q') ;
							var deferred = Q.defer();
							Fileuploads
								.find({classname:'quotation', recordid: this.id}, function(err,attachmentsFound){
									if (err) {
										deferred.reject(new Error(err));
									} else {
										deferred.resolve(attachmentsFound);
									}
								});
							return deferred.promise;
						}


				-->
				<% _.each(attachedFiles, function(attachedFile) { %>
					<li id="fileUpload_<%= attachedFile.id %>">
						<input class="fileUploadCheckBoxes" type="checkbox" id="fileUploadCheck_<%= attachedFile.id %>" />
						<a href="/fileuploads/receive/<%= attachedFile.id %>">
						<%= attachedFile.originaldata.originalFilename %>
						</a>
					</li>
				<% }) %>
			</ul>
			<a class="btn btn-danger btn-sm" onclick="fileUploadRemoveSelected('<%= attachmentClassName %>');">Remove selected attachments</a>
		</div>
	</div>
</div>

<script type="text/javascript">
function fileUploadRemove(id,className){
  socket.request('/fileuploads/remove/'+id,{classname:className},function(response){
    if (response.ok){
      $('#fileUpload_' + id).remove();
    } else {
      console.log(response) ;
    }
    if (typeof(onFileRemove) == 'function'){
      onFileRemove(id,className,response) ;
    }
  });
}


function fileUploadRemoveSelected(attachmentClassName){
  var selected = $('.fileUploadCheckBoxes') ;
  for (var i=0;i<selected.length;i++){
    var selectedelement = selected[i] ;
    if (selectedelement.checked){
      var fileupload_id = selectedelement.id ;
      var id = fileupload_id.split('_')[1] ;
      fileUploadRemove(id,attachmentClassName) ;    
    }
  }
}

$(document).ready(function(){
	Dropzone.options.myAwesomeDropzone = {
		init: function() {
		  this.on('success', function(data,response) {
		    if (response.id){
		      $('.attachedfiles').append(
		        '<li id="fileUpload_' +
		        response.id +
		        '"><input class="fileUploadCheckBoxes" type="checkbox" id="fileUploadCheck_' +
		        response.id +
		        '" />\n<a href="/fileuploads/receive/' +
		        response.id+
		        '">' +
		        response.filename +
		        '</a></li>'
		        );
		    }
		    if (typeof(onFileUpload) == 'function'){
		      onFileUpload(data,response) ;
		    }
		  });
		}
	};
});

</script>